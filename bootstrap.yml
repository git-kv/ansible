---

- hosts: all
  become: true
  remote_user: keith 
  vars:
    ansible_private_key_file: "~/.ssh/id_ed25519"
  pre_tasks:

  - name: remove cdrom from sources (Debian & Ubuntu)
    tags: always
    replace:
      dest: /etc/apt/sources.list
      regexp: '^deb cdrom'
      replace: '#deb cdrom'
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

  - name: install updates (CentOS)
    tags: always
    dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: install updates (Debian & Ubuntu)
    tags: always
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"


- hosts: all
  become: true
  remote_user: keith
  vars:
    ansible_private_key_file: "~/.ssh/id_ed25519"
  tasks:

  - name: create ansible user
    tags: always
    user:
      name: ansible
      groups: root

  - name: add ssh key for ansible
    tags: always
    authorized_key:
      user: ansible
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEwQ/H8W9/1/y+0mldRq4wnvcQ3Bzuyfj3JRotCttCPz ansible"

  - name: add sudoers file for ansible
    tags: always
    copy:
      src: ~/ansible/files/sudoer_ansible
      dest: /etc/sudoers.d/ansible
      owner: root
      group: root
      mode: 0440

  - name: copy tmux config
    tags: always
    copy:
      src: ~/ansible/files/tmux.conf
      dest: /home/keith/.tmux.conf
      owner: keith
      group: keith
      mode: 0644

  - name: add IP addresses of all hosts to all hosts
    tags: always
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ hostvars[item].ansible_host }} {{item}}"
      state: present
    when: hostvars[item].ansible_host is defined
    with_items: "{{ groups.all }}"
